akka {}

play.http.secret.key = "changeme"

play.modules {}

play.i18n { langs = [ "en", "pt" ] }

play.filters { enabled += filters.ExampleFilter }

play.http {
  session {

  }

  flash {

  }
}

play.server.netty { }

play.ws {

  ssl {

  }
}

play.cache { }

play.filters {

  enabled += filters.ExampleFilter

}

play.filters {

  cors {
    # Filter paths by a whitelist of path prefixes
    #pathPrefixes = ["/some/path", ...]

    # The allowed origins. If null, all origins are allowed.
    #allowedOrigins = ["http://www.example.com"]

    # The allowed HTTP methods. If null, all methods are allowed
    #allowedHttpMethods = ["GET", "POST"]
  }

  csrf {

  }

  headers {
    # The X-Frame-Options header. If null, the header is not set.
    #frameOptions = "DENY"

    # The X-XSS-Protection header. If null, the header is not set.
    #xssProtection = "1; mode=block"

    # The X-Content-Type-Options header. If null, the header is not set.
    #contentTypeOptions = "nosniff"

    # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
    #permittedCrossDomainPolicies = "master-only"

    # The Content-Security-Policy header. If null, the header is not set.
    #contentSecurityPolicy = "default-src 'self'"
  }

  hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    #allowed = [".example.com", "localhost:9000"]
  }
}

play.evolutions { }

play.db {

  prototype {

  }
}

db = "mongodb://localhost"

rabbitmq.host="localhost"
rabbitmq.queue="/test"
rabbitmq.exchange="exchange1"
